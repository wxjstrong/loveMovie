package com.wxj.common;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
/*
 * Cookie 工具类
 */
public class CookieUtil {
  /*
   * 得到cookie值，不编码
   */
	
	public static String getCookieValue(HttpServletRequest request,String cookieName){
		return getCookieValue(request,cookieName,false);
	}
	
	
	/*
	 * 得到cookie值
	 */
	public static String getCookieValue(HttpServletRequest request,String cookieName,boolean isDecoder){
		Cookie[] cookieList = request.getCookies();
		if(cookieList == null || cookieName == null){//如果cookie里为空或者cookieName为空，返回空
			return null;
		}
		String retValue = null;
		try {
		
			
			for(int i=0;i<cookieList.length; i++){
			   if(cookieList[i].getName().equals(cookieName)){
				   if(isDecoder){
					   retValue = URLDecoder.decode(cookieList[i].getValue(),"UTF-8");
				   }else{
					   retValue = cookieList[i].getValue();
				   }
				   break;
			   }
		   }
		
		
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		return retValue;
	}
	
	/*
	 * 得到cookie值
	 */
	
	public static String getCookieValue(HttpServletRequest request, String cookieName,String encodeString){
		
        Cookie[] cookieList  = request.getCookies();
        if(cookieList == null || cookieName == null){
        	return null;
        }
		
        String retValue = "";
        try{
        	for(int i=0;i<cookieList.length;i++){
        		if(cookieList[i].getName().equals(cookieName)){
        			retValue = URLDecoder.decode(cookieList[i].getValue(), encodeString);
        			break;
        		}
        	}	
        	
        }catch(UnsupportedEncodingException e){
        	e.printStackTrace();
        }	
		return retValue;
	}
	/*
	 * 设置cookie值   不设置生效时间默认浏览器关闭即失效，也不编码
	 */
	public static void setCookie(HttpServletRequest request,HttpServletResponse response,String cookieName,String cookieValue){
		setCookie(request,response,cookieName,cookieValue,-1);
	}

	/*
	 * 设置cookie值   不设置生效时间默认浏览器关闭即失效，不 编码
	 */
	public static void setCookie(HttpServletRequest request,HttpServletResponse response,String cookieName,String cookieValue,int cookieMaxage){
		 setCookie(request,response,cookieName,cookieValue,cookieMaxage,false);
	}
	
	
	
public static void setCookie(HttpServletRequest request,HttpServletResponse response,String cookieName,String cookieValue,int cookieMaxage,boolean isEncode){
		setCookie(request,response,cookieName,cookieValue,)
	}
}
